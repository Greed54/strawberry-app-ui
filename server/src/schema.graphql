# import STeam from "./generated/prisma.graphql"
# import SEmployee from "./generated/prisma.graphql"
# import SWorkDay from "./generated/prisma.graphql"
# import STeamSubscriptionPayload from "./generated/prisma.graphql"
# import SEmployeeSubscriptionPayload from "./generated/prisma.graphql"

# import TeamCreateInput from "./extend-schema.graphql"
# import TeamUpdateInput from "./extend-schema.graphql"
# import TeamListFilter from "./extend-schema.graphql"
# import EmployeeCreateInput from "./extend-schema.graphql"
# import EmployeeUpdateInput from "./extend-schema.graphql"
# import EmployeeUpdateRoleInput from "./extend-schema.graphql"
# import EmployeesListFilter from "./extend-schema.graphql"
# import WorkDaysListFilter from "./extend-schema.graphql"

type Query {
    getSTeams: [STeam]
    getSTeam(teamId: String): STeam
    getSEmployeesByTeamId(teamId: String): [SEmployee]
    getSEmployee(employeeId: String): SEmployee
    getSWorkDays(filter: WorkDaysListFilter): [SWorkDay]
    getSEmployeeOptions(searchValue: String): [SEmployee]
}

type Mutation {
    createSTeam(data: TeamCreateInput): String
    updateSTeam(data: TeamUpdateInput): String
    createSEmployee(data: EmployeeCreateInput): String
    updateSEmployee(data: EmployeeUpdateInput): String
    updateSEmployeeRole(data: EmployeeUpdateRoleInput): String
}

type Subscription {
    updateStrawberryTeamAny(filters: TeamListFilter): STeamSubscriptionPayload
    updateStrawberryEmployees(filters: EmployeesListFilter): SEmployeeSubscriptionPayload
}
